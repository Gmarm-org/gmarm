services:
  backend:
    build: ./backend
    image: gmarm-backend-prod
    container_name: gmarm-backend-prod
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres_prod:5432/gmarm_db
      - SPRING_DATASOURCE_USERNAME=produser
      - SPRING_DATASOURCE_PASSWORD=prodpass
      - APP_JWT_SECRET=${JWT_SECRET}
      - APP_JWT_EXPIRATION=86400000
    depends_on:
      - postgres_prod
    volumes:
      - ./backend/uploads:/app/uploads
    restart: unless-stopped
    networks:
      - gmarm-network

  frontend:
    build: ./frontend
    image: gmarm-frontend-prod
    container_name: gmarm-frontend-prod
    ports:
      - "80:80"
    environment:
      - VITE_API_URL=${API_URL}
      - VITE_APP_NAME=Sistema de Importaci√≥n de Armas
      - VITE_DEV_MODE=false
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - gmarm-network

  postgres_prod:
    image: postgres:14
    container_name: gmarm-postgres-prod
    environment:
      POSTGRES_DB: gmarm_db
      POSTGRES_USER: produser
      POSTGRES_PASSWORD: prodpass
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./datos:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - gmarm-network

volumes:
  postgres_data_prod:

networks:
  gmarm-network:
    driver: bridge
