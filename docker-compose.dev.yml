version: '3.8'

services:
  postgres_dev:
    image: postgres:15
    container_name: gmarm-postgres-dev
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-gmarm_dev}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      # Configuraci贸n para inicializaci贸n limpia
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./datos/00_gmarm_completo.sql:/docker-entrypoint-initdb.d/00_gmarm_completo.sql
      # Script adicional para verificar inicializaci贸n
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/01-init-db.sh
    networks:
      - gmarm_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-gmarm_dev}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend_dev:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: gmarm-backend-dev
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_dev:5432/${POSTGRES_DB:-gmarm_dev}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-postgres}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      # Configuraci贸n de CORS para desarrollo
      SPRING_CORS_ALLOWED_ORIGINS: ${FRONTEND_URL:-http://localhost:5173,http://127.0.0.1:5173}
      SPRING_CORS_ALLOWED_METHODS: GET,POST,PUT,DELETE,OPTIONS
      SPRING_CORS_ALLOWED_HEADERS: "*"
    depends_on:
      postgres_dev:
        condition: service_healthy
    networks:
      - gmarm_network
    restart: unless-stopped
    volumes:
      - ./uploads:/app/uploads

  frontend_dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: gmarm-frontend-dev
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - ./frontend/public:/app/public
    environment:
      # URL del backend configurable para desarrollo
      VITE_API_BASE_URL: ${BACKEND_URL:-http://localhost:8080}
      # URL del frontend para CORS
      VITE_FRONTEND_URL: ${FRONTEND_URL:-http://localhost:5173}
      # Modo de desarrollo
      NODE_ENV: development
    depends_on:
      - backend_dev
    networks:
      - gmarm_network
    restart: unless-stopped

volumes:
  postgres_data_dev:

networks:
  gmarm_network:
    driver: bridge
