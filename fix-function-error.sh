#!/bin/bash

# =====================================================
# SCRIPT PARA CORREGIR ERROR DE FUNCI√ìN
# =====================================================

echo "üîß Corrigiendo error de funci√≥n obtener_documentos_por_tipo_cliente..."

# Verificar que PostgreSQL est√© funcionando
if ! docker exec gmarm-postgres-dev pg_isready -U postgres >/dev/null 2>&1; then
    echo "‚ùå PostgreSQL no est√° funcionando. Iniciando contenedores..."
    docker-compose -f docker-compose.dev.yml up -d postgres_dev
    
    # Esperar a que PostgreSQL est√© listo
    echo "‚è≥ Esperando a que PostgreSQL est√© listo..."
    for i in {1..30}; do
        if docker exec gmarm-postgres-dev pg_isready -U postgres >/dev/null 2>&1; then
            echo "‚úÖ PostgreSQL est√° listo!"
            break
        fi
        echo "‚è≥ Intento $i/30: PostgreSQL a√∫n no est√° listo..."
        sleep 2
    done
fi

# Ejecutar script de correcci√≥n
echo "üîß Aplicando correcci√≥n de funci√≥n..."
docker exec gmarm-postgres-dev psql -U postgres -d gmarm_db -f /docker-entrypoint-initdb.d/06_correccion_funcion.sql

# Verificar que la correcci√≥n funcion√≥
echo "üîç Verificando que la correcci√≥n funcion√≥..."
docker exec gmarm-postgres-dev psql -U postgres -d gmarm_db -c "SELECT obtener_documentos_por_tipo_cliente('Civil');"

echo "‚úÖ ¬°Correcci√≥n aplicada! La funci√≥n deber√≠a funcionar correctamente ahora."
echo ""
echo "üìã Para verificar que todo funciona:"
echo "   docker exec gmarm-postgres-dev psql -U postgres -d gmarm_db -c \"SELECT obtener_documentos_por_tipo_cliente('Civil');\"" 